import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  SafeAreaView,
  TouchableOpacity,
  Image,
  StatusBar
} from 'react-native';

const Mine = () => {
  // Áî®Êà∑‰ø°ÊÅØ
  const userInfo = {
    name: 'Âº†Â∞èÊòé',
    wechatId: 'wxid_zhangxiaoming',
    avatar: 'https://randomuser.me/api/portraits/men/1.jpg'
  };

  // ÊúçÂä°ËèúÂçï
  const services = [
    { id: '1', icon: 'üí≥', name: 'ÊîØ‰ªò' },
    { id: '2', icon: '‚≠ê', name: 'Êî∂Ëóè' },
    { id: '3', icon: 'üì∑', name: 'Áõ∏ÂÜå' },
    { id: '4', icon: 'üé´', name: 'Âç°ÂåÖ' },
    { id: '5', icon: 'üòä', name: 'Ë°®ÊÉÖ' },
  ];

  // ËÆæÁΩÆÈÄâÈ°π
  const settings = [
    { id: '1', icon: '‚öôÔ∏è', name: 'ËÆæÁΩÆ' },
    { id: '2', icon: 'üåô', name: 'Â§úÈó¥Ê®°Âºè' },
    { id: '3', icon: 'üë§', name: 'ÂàáÊç¢Ë¥¶Âè∑' },
    { id: '4', icon: '‚ùì', name: 'Â∏ÆÂä©‰∏éÂèçÈ¶à' },
    { id: '5', icon: '‚ÑπÔ∏è', name: 'ÂÖ≥‰∫éÂæÆ‰ø°' },
  ];

  // Ê∏≤ÊüìËÆæÁΩÆÈ°π
  const renderSettingItem = (item: any) => (
      <TouchableOpacity style={styles.settingItem} key={item.id}>
        <Text style={styles.settingIcon}>{item.icon}</Text>
        <Text style={styles.settingName}>{item.name}</Text>
        <Text style={styles.arrow}>‚Ä∫</Text>
      </TouchableOpacity>
  );

  return (
      <SafeAreaView style={styles.container}>
        <StatusBar barStyle="dark-content" backgroundColor="#f1f1f1" />

        {/* Ê†áÈ¢òÊ†è */}
        <View style={styles.header}>
          <Text style={styles.headerTitle}>Êàë</Text>
        </View>

        <ScrollView style={styles.content}>
          {/* Áî®Êà∑‰ø°ÊÅØÂå∫Âüü */}
          <TouchableOpacity style={styles.userCard}>
            <Image source={{ uri: userInfo.avatar }} style={styles.avatar} />
            <View style={styles.userInfo}>
              <Text style={styles.userName}>{userInfo.name}</Text>
              <Text style={styles.userId}>ÂæÆ‰ø°Âè∑: {userInfo.wechatId}</Text>
            </View>
            <Text style={styles.qrCode}>‚åó</Text>
          </TouchableOpacity>


          {/* ÂàÜÈöîÁ∫ø */}
          <View style={styles.divider} />

          {/* ËÆæÁΩÆÈÄâÈ°π */}
          <View style={styles.settingsContainer}>
            {settings.map(renderSettingItem)}
          </View>
        </ScrollView>
      </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f1f1f1',
  },
  header: {
    height: 44,
    backgroundColor: '#f1f1f1',
    justifyContent: 'center',
    alignItems: 'center',
    borderBottomWidth: StyleSheet.hairlineWidth,
    borderBottomColor: '#ddd',
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#000',
  },
  content: {
    flex: 1,
    backgroundColor: '#f1f1f1',
  },
  userCard: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 16,
    backgroundColor: '#fff',
    marginBottom: 10,
  },
  avatar: {
    width: 64,
    height: 64,
    borderRadius: 6,
    marginRight: 16,
    backgroundColor: '#e0e0e0',
  },
  userInfo: {
    flex: 1,
  },
  userName: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 6,
    color: '#000',
  },
  userId: {
    fontSize: 14,
    color: '#888',
  },
  qrCode: {
    fontSize: 24,
    color: '#888',
  },
  servicesContainer: {
    backgroundColor: '#fff',
    paddingVertical: 15,
    marginBottom: 10,
  },
  servicesRow: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginBottom: 20,
  },
  serviceItem: {
    alignItems: 'center',
    width: '30%',
  },
  serviceIcon: {
    fontSize: 28,
    marginBottom: 8,
  },
  serviceName: {
    fontSize: 14,
    color: '#333',
  },
  divider: {
    height: 8,
    backgroundColor: '#f1f1f1',
  },
  settingsContainer: {
    backgroundColor: '#fff',
  },
  settingItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 16,
    paddingHorizontal: 16,
    borderBottomWidth: StyleSheet.hairlineWidth,
    borderBottomColor: '#eee',
  },
  settingIcon: {
    fontSize: 20,
    marginRight: 12,
    width: 24,
    textAlign: 'center',
  },
  settingName: {
    flex: 1,
    fontSize: 16,
    color: '#333',
  },
  arrow: {
    fontSize: 24,
    color: '#ccc',
  },
});

export default Mine;
